@model UnicaesGestion.Unidad

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!--Corregido-->
<!--main content start-->
<section id="main-content">
    <section class="wrapper site-min-height">
        <!-- page start-->
        <section class="panel">
            <header class="panel-heading">
                Nuevo Procedimiento
            </header>

            <div class="panel-body">
                <div class="form">
                    <form class="cmxform form-horizontal tasi-form" id="signupForm" method="Post" action="/Unidads/Create">

                        <div class="form-group row">
                            <label for="procedimiento" class="control-label col-lg-2">Unidad</label>
                            <div class="col-lg-10">
                                <textarea class="form-control" id="nombre" name="nombre" rows="3"></textarea>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="objetivoI" class="control-label col-lg-2">Objetivo</label>
                            <div class="col-lg-10">
                                <textarea class="form-control" id="objetivo" name="objetivo" rows="3"> </textarea>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="objetivoF" class="control-label col-lg-2">Depende</label>
                            <div class="col-lg-10">
                                @Html.DropDownList("depende", null, htmlAttributes: new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group row">
                            <label for="objetivoF" class="control-label col-lg-2">Responsable</label>
                            <div class="col-lg-10">
                                @Html.DropDownList("idPuestoResponsableTrabajo", null, htmlAttributes: new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-lg-offset-2 col-lg-10">
                                <button class="btn btn-danger" type="submit" value="Create">Guardar</button>
                                <button class="btn btn-default" type="submit" value="Create">Cancelar</button>
                            </div>
                        </div>

                    </form>
                </div>
            </div>


        </section>
        <!-- page end-->
    </section>
</section>
<!--main content end-->
<!--Start JavaScript-->
@section JavaScript {
    <script src="~/Content/js/ModalFunction.js"></script>

    <script>
        $(document).ready(function () {
            EditableTable.init();
        });
    </script>
}
<!--End JavaScript-->



@*<h2>Create</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Unidad</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.objetivo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.objetivo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.objetivo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.depende, "depende", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("depende", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.depende, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.idPuestoResponsableTrabajo, "idPuestoResponsableTrabajo", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("idPuestoResponsableTrabajo", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.idPuestoResponsableTrabajo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@